name: Release APK

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ✅ Flutter SDK with caching
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          cache: true

      # ✅ Cache pub dependencies
      - name: Cache pub packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      # ✅ Cache Gradle dependencies
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: flutter pub get

      - name: Build release APK
        run: flutter build apk --release

      - name: Determine next version based on commit message
        id: versioning
        run: |
          # Get the latest tag, default to v0.0.0
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $latest_tag"

          # Extract version parts
          IFS='.' read -r major minor patch <<<"${latest_tag#v}"

          # Get the latest commit message
          commit_msg=$(git log -1 --pretty=%B)
          echo "Commit message: $commit_msg"

          # Default bump is patch
          bump="patch"

          if echo "$commit_msg" | grep -iq "BREAKING CHANGE\|major:"; then
            bump="major"
          elif echo "$commit_msg" | grep -iq "feat:"; then
            bump="minor"
          elif echo "$commit_msg" | grep -iq "fix:"; then
            bump="patch"
          fi

          echo "Version bump type: $bump"

          # Bump the version
          if [ "$bump" = "major" ]; then
            new_tag="v$((major + 1)).0.0"
          elif [ "$bump" = "minor" ]; then
            new_tag="v$major.$((minor + 1)).0"
          else
            new_tag="v$major.$minor.$((patch + 1))"
          fi

          echo "RELEASE_TAG=$new_tag" >> $GITHUB_ENV
          echo "New version: $new_tag"

          # Create and push the new tag
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag $new_tag
          git push origin $new_tag

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: Release ${{ env.RELEASE_TAG }}
          body: |
            Automated release with APK
          files: build/app/outputs/flutter-apk/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
